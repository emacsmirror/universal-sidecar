# SPDX-FileCopyrightText: 2024 Samuel W. Flint <me@samuelwflint.com>
#
# SPDX-License-Identifier: GPL-3.0-or-later

image: nixos/unstable
packages:
  - nixos.emacs
  - nixos.hut
  - nixos.python3
  - nixos.reuse
sources:
  - https://github.com/riscy/melpazoid
artifacts:
  - package-archive.tar.gz
tasks:
  - setup: |
      emacs --batch -l emacs-universal-sidecar/build/init.el -f build/package-install-prereqs
  - license-lint: |
      cd emacs-universal-sidecar
      reuse lint
  - lint-all: |
      emacs --batch -l emacs-universal-sidecar/build/init.el -f package-lint-batch-and-exit emacs-universal-sidecar/*.el || exit 0
  - run-melpazoid: |
      export LOCAL_REPO='~/emacs-universal-sidecar/'
      RECIPE=$(cat ~/emacs-universal-sidecar/build/recipes/universal-sidecar) \
          emacs --batch -l ~/emacs-universal-sidecar/build/init.el -l melpazoid/melpazoid/melpazoid.el
      RECIPE=$(cat ~/emacs-universal-sidecar/build/recipes/universal-sidecar-elfeed-related) \
          emacs --batch -l ~/emacs-universal-sidecar/build/init.el -l melpazoid/melpazoid/melpazoid.el
      RECIPE=$(cat ~/emacs-universal-sidecar/build/recipes/universal-sidecar-elfeed-score) \
          emacs --batch -l ~/emacs-universal-sidecar/build/init.el -l melpazoid/melpazoid/melpazoid.el
      RECIPE=$(cat ~/emacs-universal-sidecar/build/recipes/universal-sidecar-roam) \
          emacs --batch -l ~/emacs-universal-sidecar/build/init.el -l melpazoid/melpazoid/melpazoid.el
      RECIPE=$(cat ~/emacs-universal-sidecar/build/recipes/ebib-sidecar) \
          emacs --batch -l ~/emacs-universal-sidecar/build/init.el -l melpazoid/melpazoid/melpazoid.el
      RECIPE=$(cat ~/emacs-universal-sidecar/build/recipes/org-cite-sidecar) \
          emacs --batch -l ~/emacs-universal-sidecar/build/init.el -l melpazoid/melpazoid/melpazoid.el
  - build-packages: |
      mkdir -p ~/package-archive/
      emacs --batch -l ~/emacs-universal-sidecar/build/init.el -f build/build-packages
  - build-archive: |
      tar czvf ~/package-archive.tar.gz ~/package-archive
